#! /bin/bash
# -*- coding: utf-8 -*-
# okfocus 4 lyfe

echo "Welcome to OKFocus!"
echo "This will install everything you need to get started with us."
echo "First, we need to make sure you have some things installed."


echo "Do you have Git and XCode installed? (y/n)"
read RESPONSE
if [[ "$RESPONSE" == "y" ]]; then
	  echo "Configuring some stuff..."
	  echo "
if [ -f ~/.bashrc ]; then
   source ~/.bashrc
fi
" > ~/.bash_profile
	  source ~/.bash_profile
	  

    echo "Adding stuff to your .gitconfig"
    echo '
[color]
  branch = auto
  diff = auto
  status = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[alias]
  st = status -bs
  ci = commit
  br = branch
  bl = blame -C
  co = checkout
  df = diff --word-diff
  lg = log -p
  l1 = log --oneline --decorate
[core]
  quotepath = false
[push]
  default = tracking' >> ~/.gitconfig

    echo "Adding stuff to your .gitignore_global"
    echo "
# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log
*.sql
*.sqlite

# OS generated files #
######################
.DS_Store?
.DS_Store
ehthumbs.db
Icon?
Thumbs.db

# EMACS #
#####################
*~
.#*
*#" >> ~/.gitignore_global


	  echo "Installing Homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.github.com/gist/323731)"
	  
	  echo "Updating Homebrew"
	  brew update

	  echo "Putting Homebrew earlier in your path" #ripped this off from thoughtbot
	  echo "
export PATH='/usr/local/bin:$PATH'" >> ~/.bashrc
	  source ~/.bashrc

	  echo "Installing Postgres"
	  brew install postgres

	  echo "Installing Redis"
	  brew install redis

	  echo "Installing MongoDB"
	  brew install mongodb

	  echo "Installing ImageMagick"
	  brew install imagemagick

	  echo "Installing RVM"
	  bash < <(curl -s https://rvm.beginrescueend.com/install/rvm)
	  echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"' > ~/.bashrc
	  source ~/.bashrc
	  
	  echo "\n"
	  echo "Finished installing all the OS specific stuff. Let's setup Ruby now."
	  
	  echo "Instaling Ruby 1.9.2"
	  rvm install 1.9.2

	  echo "Instaling Ruby 1.9.3"
	  rvm install 1.9.3
	  
	  echo "Making Ruby 1.9.2 default"
	  rvm use 1.9.2 --default
	  
	  echo "Creating and adjusting your .gemrc"
    echo "
---
update_sources: true
sources:
- http://gems.rubyforge.org/
- http://gems.github.com
benchmark: false
backtrace: false
verbose: true
bulk_threshold: 1000
gem: --no-ri --no-rdoc
install: --no-ri --no-rdoc
update: --no-ri --no-rdoc
             " > ~/.gemrc

	  echo "Installing some of our favorite gems..."
	  
	  echo "heroku"
	  gem install heroku
	  
	  echo "taps"
	  gem install taps

	  echo "foreman"
	  gem install foreman

	  echo "gist"
	  gem install gist

	  echo "rails"
	  gem install rails -v=3.2.3

	  echo "closure compiler"
	  gem install closure-compiler

	  echo "sinatra"
	  gem install sinatra
    
	  echo "pg"
	  gem install pg
    
	  echo "lolcat"
    gem install lolcat
    
	  echo "Almost done! Would you like to make lolcat the defaut? (y/n)"
    read LOLCAT
    if [[ "$LOLCAT" == "y"]]; then
        echo 'alias cat="lolcat"' >> ~/.bashrc                
    else
        echo "your loss..."
    fi

    echo "Cool. Lets set up Node.js and some Javascript stuff. We don't have to install NPM anymore because it ships with Node.js now."

    echo "Downloading the Node.js repo"
    git clone https://github.com/joyent/node.git ~/node
    cd ~/node
    
    echo "Configuring the stable version"
    git checkout v0.6.14
    ./configure

    echo "Making and building Node.js"
    make
    sudo make install

    echo "Installing Jasmine"
    gem install jasmine

    echo "Installing Closure Compiler"
    brew install closure-compiler
    
	  echo "Your environment is set up and good to go!"
	  echo " <3 okfocus"
else
	  echo "Get Git here --> http://git-scm.com/download"
	  echo "You can download XCode from the app store"
	  echo "Try again after you've downloaded these!"
	  echo " <3 okfocus"
fi
